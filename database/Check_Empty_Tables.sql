-- =============================================
-- CHECK EMPTY TABLES - KI·ªÇM TRA B·∫¢NG TR·ªêNG
-- =============================================
-- Script ki·ªÉm tra to√†n b·ªô b·∫£ng trong UTE_Fashion database
-- Hi·ªÉn th·ªã danh s√°ch b·∫£ng k√®m s·ªë l∆∞·ª£ng h√†ng
-- D·ªÖ nh√¨n th·∫•y b·∫£ng n√†o kh√¥ng c√≥ data

USE UTE_Fashion;
GO

PRINT '=========================================='
PRINT 'KI·ªÇM TRA C√ÅC B·∫¢NG TR·ªêNG TRONG DATABASE'
PRINT '=========================================='
PRINT ''

-- =============================================
-- PH∆Ø∆†NG PH√ÅP 1: Hi·ªÉn th·ªã T·∫§T C·∫¢ b·∫£ng + s·ªë h√†ng
-- =============================================
PRINT 'üìä B·∫¢NG 1: T·∫§T C·∫¢ C√ÅC B·∫¢NG TRONG DATABASE'
PRINT '=========================================='

SELECT 
    ROW_NUMBER() OVER (ORDER BY row_count ASC) AS 'STT',
    table_name AS 'T√™n b·∫£ng',
    row_count AS 'S·ªë h√†ng',
    CASE 
        WHEN row_count = 0 THEN '‚ùå TR·ªêNG (0 h√†ng)'
        WHEN row_count < 5 THEN '‚ö†Ô∏è  √çT D·ªÆ LI·ªÜU'
        ELSE '‚úÖ C√ì D·ªÆ LI·ªÜU'
    END AS 'Tr·∫°ng th√°i'
FROM (
    SELECT 
        t.name AS table_name,
        SUM(p.rows) AS row_count
    FROM sys.tables t
    INNER JOIN sys.indexes i ON t.object_id = i.object_id
    INNER JOIN sys.partitions p ON i.object_id = p.object_id AND i.index_id = p.index_id
    WHERE t.name NOT LIKE 'sys%'
    GROUP BY t.name
) AS table_counts
ORDER BY row_count ASC;

PRINT ''
PRINT ''

-- =============================================
-- PH∆Ø∆†NG PH√ÅP 2: Ch·ªâ hi·ªÉn th·ªã C√ÅC B·∫¢NG TR·ªêNG
-- =============================================
PRINT '‚ùå B·∫¢NG 2: CH·ªà C√ÅC B·∫¢NG TR·ªêNG (0 h√†ng)'
PRINT '=========================================='

SELECT 
    ROW_NUMBER() OVER (ORDER BY t.name ASC) AS 'STT',
    t.name AS 'T√™n b·∫£ng'
FROM sys.tables t
INNER JOIN sys.indexes i ON t.object_id = i.object_id
INNER JOIN sys.partitions p ON i.object_id = p.object_id AND i.index_id = p.index_id
WHERE t.name NOT LIKE 'sys%'
GROUP BY t.name
HAVING SUM(p.rows) = 0
ORDER BY t.name;

PRINT ''
PRINT ''

-- =============================================
-- PH∆Ø∆†NG PH√ÅP 3: Ki·ªÉm tra c√°c b·∫£ng c·ª• th·ªÉ
-- =============================================
PRINT 'üîç B·∫¢NG 3: KI·ªÇM TRA C√ÅC B·∫¢NG QUAN TR·ªåNG'
PRINT '=========================================='

SELECT 
    'Roles' AS 'T√™n b·∫£ng', COUNT(*) AS 'S·ªë h√†ng',
    CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END AS 'Tr·∫°ng th√°i'
FROM Roles
UNION ALL
SELECT 'Users', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Users
UNION ALL
SELECT 'User_Roles', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM User_Roles
UNION ALL
SELECT 'Shops', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Shops
UNION ALL
SELECT 'Categories', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Categories
UNION ALL
SELECT 'Brands', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Brands
UNION ALL
SELECT 'Products', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Products
UNION ALL
SELECT 'Sizes', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Sizes
UNION ALL
SELECT 'Colors', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Colors
UNION ALL
SELECT 'Product_Variants', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Product_Variants
UNION ALL
SELECT 'Product_Images', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Product_Images
UNION ALL
SELECT 'Carriers', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Carriers
UNION ALL
SELECT 'Shippers', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Shippers
UNION ALL
SELECT 'Orders', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Orders
UNION ALL
SELECT 'Payments', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Payments
UNION ALL
SELECT 'Coupons', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Coupons
UNION ALL
SELECT 'Reviews', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Reviews
UNION ALL
SELECT 'Wishlists', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Wishlists
UNION ALL
SELECT 'Carts', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Carts
UNION ALL
SELECT 'Cart_Items', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Cart_Items
UNION ALL
SELECT 'Addresses', COUNT(*), CASE WHEN COUNT(*) = 0 THEN '‚ùå TR·ªêNG' ELSE '‚úÖ C√ì' END FROM Addresses
ORDER BY 'T√™n b·∫£ng';

PRINT ''
PRINT ''

-- =============================================
-- PH∆Ø∆†NG PH√ÅP 4: Th·ªëng k√™ t·ªïng quan
-- =============================================
PRINT 'üìà B·∫¢NG 4: TH·ªêNG K√ä T·ªîNG QUAN'
PRINT '=========================================='

DECLARE @TotalTables INT;
DECLARE @EmptyTables INT;
DECLARE @TablesWithData INT;

SELECT @TotalTables = COUNT(*)
FROM sys.tables 
WHERE name NOT LIKE 'sys%';

SELECT @EmptyTables = COUNT(*)
FROM (
    SELECT t.name
    FROM sys.tables t
    INNER JOIN sys.indexes i ON t.object_id = i.object_id
    INNER JOIN sys.partitions p ON i.object_id = p.object_id AND i.index_id = p.index_id
    WHERE t.name NOT LIKE 'sys%'
    GROUP BY t.name
    HAVING SUM(p.rows) = 0
) AS empty_tables;

SELECT @TablesWithData = @TotalTables - @EmptyTables;

SELECT 
    @TotalTables AS 'T·ªïng s·ªë b·∫£ng',
    @EmptyTables AS 'B·∫£ng tr·ªëng (0 h√†ng)',
    @TablesWithData AS 'B·∫£ng c√≥ d·ªØ li·ªáu',
    CAST(@EmptyTables * 100.0 / @TotalTables AS DECIMAL(5,2)) AS 'T·ª∑ l·ªá tr·ªëng (%)';

PRINT ''
PRINT '=========================================='
PRINT '‚úÖ KI·ªÇM TRA XONG'
PRINT '=========================================='
GO

-- ============================================================================
-- COMMISSION CALCULATION VERIFICATION QUERIES
-- ============================================================================
-- Ng√†y: 2025-10-27
-- M·ª•c ƒë√≠ch: Ki·ªÉm tra c√°c c·ªôt commission_percentage, commission_amount, 
--           shop_net_revenue trong database

-- ============================================================================
-- 1. KI·ªÇM TRA C·∫§U TR√öC B·∫¢NG SHOPS
-- ============================================================================

PRINT '‚úÖ [Step 1] Checking Shops table structure for commission_percentage'
DESC Shops;
-- Expected to see: commission_percentage DECIMAL(5, 2)

-- Ki·ªÉm tra gi√° tr·ªã m·∫∑c ƒë·ªãnh
SELECT COUNT(*) as total_shops,
       SUM(CASE WHEN commission_percentage IS NULL THEN 1 ELSE 0 END) as null_commission,
       SUM(CASE WHEN commission_percentage = 0.00 THEN 1 ELSE 0 END) as zero_commission
FROM Shops;

-- Hi·ªÉn th·ªã t·∫•t c·∫£ shops v√† commission c·ªßa ch√∫ng
PRINT '‚úÖ Current Shop Commission Settings:'
SELECT shop_id, shop_name, commission_percentage
FROM Shops
ORDER BY shop_id;


-- ============================================================================
-- 2. KI·ªÇM TRA C·∫§U TR√öC B·∫¢NG SHOPANALYTICS
-- ============================================================================

PRINT '‚úÖ [Step 2] Checking ShopAnalytics table structure for commission fields'
DESC ShopAnalytics;
-- Expected to see: commission_percentage, commission_amount, shop_net_revenue

-- Ki·ªÉm tra d·ªØ li·ªáu commission trong ShopAnalytics
PRINT '‚úÖ ShopAnalytics Commission Data (Last 10 records):'
SELECT TOP 10
    analytics_id,
    shop_id,
    period_start,
    period_end,
    total_revenue,
    total_orders,
    commission_percentage,
    commission_amount,
    shop_net_revenue,
    (commission_amount + shop_net_revenue) as verification_sum
FROM ShopAnalytics
WHERE commission_amount > 0
ORDER BY analytics_id DESC;


-- ============================================================================
-- 3. KI·ªÇM TRA LOGIC T√çNH TO√ÅN - VERIFICATION SUM
-- ============================================================================

PRINT '‚úÖ [Step 3] Verifying Commission Calculation Logic'
PRINT '   (Commission Amount + Shop Net Revenue should equal Total Revenue)'

SELECT
    analytics_id,
    shop_id,
    total_revenue,
    commission_amount,
    shop_net_revenue,
    (commission_amount + shop_net_revenue) as calculated_total,
    CASE 
        WHEN ABS(total_revenue - (commission_amount + shop_net_revenue)) < 0.01 THEN '‚úÖ CORRECT'
        ELSE '‚ùå MISMATCH'
    END as verification_result
FROM ShopAnalytics
WHERE total_revenue > 0 AND commission_amount > 0
ORDER BY analytics_id DESC;


-- ============================================================================
-- 4. KI·ªÇM TRA THEO SHOP - T·ªîNG CHI·∫æT KH·∫§U
-- ============================================================================

PRINT '‚úÖ [Step 4] Total Commission by Shop (Cumulative Today)'

SELECT
    s.shop_id,
    s.shop_name,
    s.commission_percentage,
    COUNT(sa.analytics_id) as number_of_records,
    SUM(sa.total_revenue) as total_revenue_sum,
    SUM(sa.total_orders) as total_orders_sum,
    SUM(sa.commission_amount) as total_commission_sum,
    SUM(sa.shop_net_revenue) as total_shop_net_revenue_sum
FROM Shops s
LEFT JOIN ShopAnalytics sa ON s.shop_id = sa.shop_id 
    AND sa.period_type = 'DAY'
    AND sa.period_start = CAST(GETDATE() AS DATE)
GROUP BY s.shop_id, s.shop_name, s.commission_percentage
ORDER BY s.shop_id;


-- ============================================================================
-- 5. KI·ªÇM TRA ORDERS ƒê√É DELIVERED
-- ============================================================================

PRINT '‚úÖ [Step 5] Orders Delivered Today (Should Trigger Commission Calculation)'

SELECT
    o.order_id,
    o.order_number,
    o.shop_id,
    s.shop_name,
    o.total_amount,
    s.commission_percentage,
    (o.total_amount * s.commission_percentage / 100) as expected_commission,
    o.delivered_at,
    o.order_status
FROM Orders o
LEFT JOIN Shops s ON o.shop_id = s.shop_id
WHERE o.order_status = 'Delivered'
    AND CAST(o.delivered_at AS DATE) = CAST(GETDATE() AS DATE)
ORDER BY o.order_id DESC;


-- ============================================================================
-- 6. KI·ªÇM TRA L·ªñI - ORDERS KH√îNG C√ì SHOP
-- ============================================================================

PRINT '‚úÖ [Step 6] Checking for Orders without Shop (Edge Case)'

SELECT COUNT(*) as orders_without_shop
FROM Orders
WHERE shop_id IS NULL;

-- N·∫øu > 0, c√°c orders n√†y s·∫Ω kh√¥ng ƒë∆∞·ª£c t√≠nh chi·∫øt kh·∫•u


-- ============================================================================
-- 7. KI·ªÇM TRA SHOPS KH√îNG C√ì COMMISSION SETTING
-- ============================================================================

PRINT '‚úÖ [Step 7] Checking Shops without Commission Setting'

SELECT
    shop_id,
    shop_name,
    commission_percentage,
    CASE
        WHEN commission_percentage IS NULL THEN '‚ùå NULL'
        WHEN commission_percentage = 0.00 THEN '‚ö†Ô∏è ZERO (No Commission)'
        ELSE '‚úÖ Set to ' + CAST(commission_percentage AS VARCHAR)
    END as status
FROM Shops
ORDER BY shop_id;


-- ============================================================================
-- 8. RESET COMMISSION DATA (KHI C·∫¶N TEST L·∫†I)
-- ============================================================================

/*
-- UNCOMMMENT N·∫æU C·∫¶N X√ìA D·ªÆ LI·ªÜU COMMISSION ƒê·ªÇ TEST L·∫†I

PRINT '‚ö†Ô∏è [DANGER] Clearing ShopAnalytics Commission Data'

-- X√≥a ShopAnalytics h√¥m nay
DELETE FROM ShopAnalytics
WHERE period_type = 'DAY' 
    AND period_start = CAST(GETDATE() AS DATE);

-- Reset commission_percentage v·ªÅ 0 (n·∫øu mu·ªën test v·ªõi 0%)
-- UPDATE Shops SET commission_percentage = 0.00;

-- Reset commission_percentage th√†nh 10% (ƒë·ªÉ test)
-- UPDATE Shops SET commission_percentage = 10.00;

PRINT '‚úÖ Data cleared. You can now re-run the order delivery flow to recalculate.'
*/


-- ============================================================================
-- 9. MONITORING - REAL-TIME COMMISSION TRACKING
-- ============================================================================

PRINT '‚úÖ [Step 9] Real-Time Commission Summary'

SELECT
    'Total Shops' as metric,
    COUNT(*) as value
FROM Shops
UNION ALL
SELECT 'Total Shops with Commission > 0', COUNT(*) 
FROM Shops WHERE commission_percentage > 0
UNION ALL
SELECT 'Shops Analyzed Today', COUNT(DISTINCT shop_id)
FROM ShopAnalytics
WHERE period_start = CAST(GETDATE() AS DATE)
UNION ALL
SELECT 'Total Revenue Today', SUM(total_revenue)
FROM ShopAnalytics
WHERE period_start = CAST(GETDATE() AS DATE)
UNION ALL
SELECT 'Total Commission Today (Platform Revenue)', SUM(commission_amount)
FROM ShopAnalytics
WHERE period_start = CAST(GETDATE() AS DATE)
UNION ALL
SELECT 'Total Shop Net Revenue Today', SUM(shop_net_revenue)
FROM ShopAnalytics
WHERE period_start = CAST(GETDATE() AS DATE);


-- ============================================================================
PRINT '‚úÖ ============ COMMISSION VERIFICATION COMPLETE ============'
-- ============================================================================